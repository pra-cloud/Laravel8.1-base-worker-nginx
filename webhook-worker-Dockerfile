FROM base2:latest

WORKDIR /var/www/html/

COPY . /var/www/html/

RUN composer install --no-scripts --no-autoloader --ansi --no-interaction


RUN chown -R root:root /var/www/html/
# install nginx
#RUN set -x \
#    && nginxPackages=" \
#        nginx=${NGINX_VERSION}-r${PKG_RELEASE} \
#        nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE} \
#        nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE} \
#        nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE} \
#        nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE} \
#    " \
#    set -x \
#    && KEY_SHA512="e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin" \
#    && apk add --no-cache --virtual .cert-deps \
 #       openssl \
 #   && wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub \
 #   && if [ "$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)" = "$KEY_SHA512" ]; then \
 #       echo "key verification succeeded!"; \
 ##       mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/; \
  ##  else \
  #      echo "key verification failed!"; \
  #      exit 1; \
  #  fi \
  #  && apk del .cert-deps \
 #   && apk add -X "https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\.[0-9]+' /etc/alpine-release)/main" --no-cache $nginxPackages

#RUN ln -sf /dev/stdout /var/log/nginx/access.log \
 #   && ln -sf /dev/stderr /var/log/nginx/error.log

#COPY ./docker/nginx.conf /etc/nginx/

#RUN rm -rfv /etc/nginx/conf.d/default.conf
# copy supervisor configuration
COPY supervisord.conf /etc/supervisord.conf

RUN chmod +x start.sh

EXPOSE 80

# run supervisor
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisord.conf"]

